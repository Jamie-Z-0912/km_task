<jwebap>
    <component name="JdbcComponent" contentSourceType="suishen.webap.plugin.tracer.jdbc.JdbcComponent">
        <component-param>
            <name>trace-filter-active-time</name>
            <value>-1</value>
            <description>(ms) timings filter's over time</description>
        </component-param>
        <component-param>
            <name>trace-max-size</name>
            <value>1000</value>
            <description>max over-time trace size</description>
        </component-param>
        <component-param style="longtext">
            <name>connection-listener</name>
            <value>
                suishen.webap.plugin.tracer.http.ServletOpenedConnectionListener;suishen.webap.plugin.tracer.method.MethodOpenedConnectionListener
            </value>
            <description>Connection Listener</description>
        </component-param>
        <component-param style="longtext">
            <name>driver-clazzs</name>
            <value>org.apache.commons.dbcp2.BasicDataSource</value>
            <description>
                1)Local datasource: set your ConnectionManagerClass,or the connection pool 's datasource. If you have
                more than one class ,divided by ';'.
                c3p0:com.mchange.v2.c3p0.ComboPooledDataSource;
                dbcp: org.apache.commons.dbcp.BasicDataSource
                Also,other class. Jwebap will inject driver-clazzs,and detect any connection and datasource object it's
                method renturn.
                Note: 'driver-clazzs =jdbc driver' is deprecated. Beacause of connection pool, set 'driver-clazzs =jdbc
                driver', jwebap will find out all connection is leaked.
                2)JNDI datasource: If your application uses jndi datasource, you can set the class which manages
                connections in your application as driver, e.g.: 'com.china.telecom.ConnectionManager'. Else if you use
                spring to get jndi datasource ,you also can set
                driver-clazzs=org.springframework.jndi.JndiObjectFactoryBean.JdbcComponent will inject this class to
                proxy all connection the class's method return.

            </description>
        </component-param>
    </component>

    <component name="HttpComponent" contentSourceType="suishen.webap.plugin.tracer.http.HttpComponent">

        <component-param>
            <name>trace-filter-active-time</name>
            <value>300</value>
            <description>(ms) timings filter's over time</description>
        </component-param>
        <component-param>
            <name>trace-max-size</name>
            <value>1000</value>
            <description>max over-time trace size</description>
        </component-param>

    </component>
</jwebap>
